{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('Workspace')]",
      "location": "[parameters('WorkspaceRegion')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "ASimAuthenticationSigninLogs",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
          ],
          "properties": {
            "etag": "*",
            "displayName": "Authentication ASIM parser for AAD interactive sign-in logs",
            "category": "ASIM",
            "FunctionAlias": "ASimAuthenticationSigninLogs",
            "query": "let UserTypeLookup = datatable (UserType:string, TargetUserType:string) [\n  'Member', 'Regular',\n  'Guest','Guest', \n  '',''\n];\nlet AADSigninLogs=(disabled:bool=false){\nSigninLogs | where not(disabled)\n| extend\n  EventVendor = 'Microsoft'\n  , EventProduct = 'AAD'\n  , EventCount=int(1)\n  , EventSchemaVersion='0.1.0'\n  , EventResult = iff (ResultType ==0, 'Success', 'Failure')\n  , EventOriginalResultDetails = coalesce(ResultDescription, ResultType)\n  , EventStartTime = TimeGenerated\n  , EventEndTime= TimeGenerated\n  , EventType= 'Logon'\n  , EventSubType = 'Interactive'\n  , SrcDvcId=tostring(DeviceDetail.deviceId)\n  , SrcDvcHostname =tostring(DeviceDetail.displayName)\n  , SrcDvcOs=tostring(DeviceDetail.operatingSystem)\n  // , SrcBrowser= tostring(DeviceDetail.browser)\n  , Location = todynamic(LocationDetails)\n  , TargetUsernameType='UPN'\n  , TargetUserIdType='AADID'\n  , SrcDvcIpAddr=IPAddress\n| extend\n      SrcGeoCity=tostring(Location.city)\n      , SrcGeoCountry=tostring(Location.countryOrRegion)\n      , SrcGeoLatitude=toreal(Location.geoCoordinates.latitude)\n      , SrcGeoLongitude=toreal(Location.geoCoordinates.longitude)\n | lookup ASIM_AADSTSErrorCodes on ResultType\n | project-rename\n     EventOriginalUid =Id\n     , LogonMethod  = AuthenticationRequirement\n     , HttpUserAgent=UserAgent\n     , TargetSessionId=CorrelationId\n     , TargetUserId = UserId\n     , TargetUsername=UserPrincipalName\n     , TargetAppId = ResourceIdentity\n     , TargetAppName=ResourceDisplayName\n  //\n  | lookup UserTypeLookup on UserType\n  | project-away UserType\n  // ** Aliases\n  | extend \n        User=TargetUsername\n      , LogonTarget=TargetAppName\n      , Dvc=EventVendor\n    // -- Entity identifier explicit aliases\n      , TargetUserUpn = ActorUsername\n      , TargetUserAadId = TargetUserId\n  };\n  AADSigninLogs(disabled)\n",
            "version": 1,
            "functionParameters": "disabled:bool=False"
          }
        }
      ]
    }
  ]
}